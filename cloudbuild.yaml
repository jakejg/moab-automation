steps:
# Step 1: Deploy the 'sms' Cloud Function (existing step)
  - name: 'gcr.io/cloud-builders/npm'
    id: 'Install dependencies for SMS function'
    args: ['install']

  - name: 'gcr.io/cloud-builders/npm'
    id: 'Build SMS function'
    args: ['run', 'build']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy SMS function'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud functions deploy sms \
          --entry-point=sms \
          --runtime=nodejs20 \
          --trigger-http \
          --allow-unauthenticated \
          --service-account=moonflower-453318@appspot.gserviceaccount.com

# Step 2: Build and deploy the Next.js web application
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build webapp container image'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/webapp-repo/moab-automation-webapp:$COMMIT_SHA'
      - '.'
    dir: 'webapp' # Run this step in the webapp directory

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push webapp container image'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/webapp-repo/moab-automation-webapp:$COMMIT_SHA']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy webapp to Cloud Run'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy moab-automation-webapp \
          --image=us-central1-docker.pkg.dev/$PROJECT_ID/webapp-repo/moab-automation-webapp:$COMMIT_SHA \
          --region=us-central1 \
          --platform=managed \
          --allow-unauthenticated \
          --set-secrets=TWILIO_ACCOUNT_SID=twilio-account-sid:latest,TWILIO_AUTH_TOKEN=twilio-auth-token:latest,NEXTAUTH_SECRET=nextauth-secret:latest \
          --set-env-vars=NEXTAUTH_URL=https://moab-automation-webapp-j27piftrzq-uc.a.run.app # IMPORTANT: Update this URL after the first deployment

# Tell Cloud Build to push the built image to Artifact Registry
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/webapp-repo/moab-automation-webapp:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
